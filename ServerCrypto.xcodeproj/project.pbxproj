// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXBuildFile section */
		55B234A31F795FAD00CCCEE9 /* TestFixtures in Resources */ = {isa = PBXBuildFile; fileRef = OBJ_40 /* TestFixtures */; };
		OBJ_105 /* CryptoError.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_9 /* CryptoError.swift */; };
		OBJ_106 /* CryptoProvider.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_10 /* CryptoProvider.swift */; };
		OBJ_107 /* Hex.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_11 /* Hex.swift */; };
		OBJ_108 /* RawBytesProviding.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_12 /* RawBytesProviding.swift */; };
		OBJ_58 /* CryptoErrorTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_24 /* CryptoErrorTests.swift */; };
		OBJ_59 /* HexTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_25 /* HexTests.swift */; };
		OBJ_60 /* HashTestData.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_27 /* HashTestData.swift */; };
		OBJ_61 /* HashTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_28 /* HashTests.swift */; };
		OBJ_62 /* ECDSASignatures.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_31 /* ECDSASignatures.swift */; };
		OBJ_63 /* ECDSATests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_32 /* ECDSATests.swift */; };
		OBJ_64 /* HMACSignatures.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_34 /* HMACSignatures.swift */; };
		OBJ_65 /* HMACTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_35 /* HMACTests.swift */; };
		OBJ_66 /* RSATestVectors.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_37 /* RSATestVectors.swift */; };
		OBJ_67 /* RSATests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_38 /* RSATests.swift */; };
		OBJ_68 /* SignatureTestsCoordinator.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_39 /* SignatureTestsCoordinator.swift */; };
		OBJ_70 /* Signature.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "ServerCrypto::Signature::Product" /* Signature.framework */; };
		OBJ_71 /* Hash.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "ServerCrypto::Hash::Product" /* Hash.framework */; };
		OBJ_72 /* CryptoSupport.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "ServerCrypto::CryptoSupport::Product" /* CryptoSupport.framework */; };
		OBJ_83 /* AsymmetricKey.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_17 /* AsymmetricKey.swift */; };
		OBJ_84 /* Exports.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_18 /* Exports.swift */; };
		OBJ_85 /* HMACKey.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_19 /* HMACKey.swift */; };
		OBJ_86 /* Signer.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_20 /* Signer.swift */; };
		OBJ_88 /* Hash.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "ServerCrypto::Hash::Product" /* Hash.framework */; };
		OBJ_89 /* CryptoSupport.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "ServerCrypto::CryptoSupport::Product" /* CryptoSupport.framework */; };
		OBJ_96 /* Exports.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_14 /* Exports.swift */; };
		OBJ_97 /* Hasher.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_15 /* Hasher.swift */; };
		OBJ_99 /* CryptoSupport.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "ServerCrypto::CryptoSupport::Product" /* CryptoSupport.framework */; };
/* End PBXBuildFile section */

/* Begin PBXContainerItemProxy section */
		55B2349B1F795EDD00CCCEE9 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "ServerCrypto::Hash";
			remoteInfo = Hash;
		};
		55B2349C1F795EDD00CCCEE9 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "ServerCrypto::CryptoSupport";
			remoteInfo = CryptoSupport;
		};
		55B2349D1F795EDD00CCCEE9 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "ServerCrypto::CryptoSupport";
			remoteInfo = CryptoSupport;
		};
		55B2349E1F795EDD00CCCEE9 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "ServerCrypto::Signature";
			remoteInfo = Signature;
		};
		55B2349F1F795EDD00CCCEE9 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "ServerCrypto::Hash";
			remoteInfo = Hash;
		};
		55B234A01F795EDD00CCCEE9 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "ServerCrypto::CryptoSupport";
			remoteInfo = CryptoSupport;
		};
/* End PBXContainerItemProxy section */

/* Begin PBXFileReference section */
		55B234A41F79648300CCCEE9 /* LinuxMain.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; name = LinuxMain.swift; path = Tests/LinuxMain.swift; sourceTree = "<group>"; };
		OBJ_10 /* CryptoProvider.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CryptoProvider.swift; sourceTree = "<group>"; };
		OBJ_11 /* Hex.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Hex.swift; sourceTree = "<group>"; };
		OBJ_12 /* RawBytesProviding.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = RawBytesProviding.swift; sourceTree = "<group>"; };
		OBJ_14 /* Exports.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Exports.swift; sourceTree = "<group>"; };
		OBJ_15 /* Hasher.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Hasher.swift; sourceTree = "<group>"; };
		OBJ_17 /* AsymmetricKey.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = AsymmetricKey.swift; sourceTree = "<group>"; };
		OBJ_18 /* Exports.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Exports.swift; sourceTree = "<group>"; };
		OBJ_19 /* HMACKey.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = HMACKey.swift; sourceTree = "<group>"; };
		OBJ_20 /* Signer.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Signer.swift; sourceTree = "<group>"; };
		OBJ_24 /* CryptoErrorTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CryptoErrorTests.swift; sourceTree = "<group>"; };
		OBJ_25 /* HexTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = HexTests.swift; sourceTree = "<group>"; };
		OBJ_27 /* HashTestData.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = HashTestData.swift; sourceTree = "<group>"; };
		OBJ_28 /* HashTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = HashTests.swift; sourceTree = "<group>"; };
		OBJ_31 /* ECDSASignatures.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ECDSASignatures.swift; sourceTree = "<group>"; };
		OBJ_32 /* ECDSATests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ECDSATests.swift; sourceTree = "<group>"; };
		OBJ_34 /* HMACSignatures.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = HMACSignatures.swift; sourceTree = "<group>"; };
		OBJ_35 /* HMACTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = HMACTests.swift; sourceTree = "<group>"; };
		OBJ_37 /* RSATestVectors.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = RSATestVectors.swift; sourceTree = "<group>"; };
		OBJ_38 /* RSATests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = RSATests.swift; sourceTree = "<group>"; };
		OBJ_39 /* SignatureTestsCoordinator.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SignatureTestsCoordinator.swift; sourceTree = "<group>"; };
		OBJ_40 /* TestFixtures */ = {isa = PBXFileReference; lastKnownFileType = folder; path = TestFixtures; sourceTree = SOURCE_ROOT; };
		OBJ_6 /* Package.swift */ = {isa = PBXFileReference; explicitFileType = sourcecode.swift; path = Package.swift; sourceTree = "<group>"; };
		OBJ_9 /* CryptoError.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CryptoError.swift; sourceTree = "<group>"; };
		"ServerCrypto::CryptoSupport::Product" /* CryptoSupport.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; path = CryptoSupport.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		"ServerCrypto::Hash::Product" /* Hash.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; path = Hash.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		"ServerCrypto::ServerCryptoTests::Product" /* ServerCryptoTests.xctest */ = {isa = PBXFileReference; lastKnownFileType = file; path = ServerCryptoTests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
		"ServerCrypto::Signature::Product" /* Signature.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; path = Signature.framework; sourceTree = BUILT_PRODUCTS_DIR; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		OBJ_109 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_69 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_70 /* Signature.framework in Frameworks */,
				OBJ_71 /* Hash.framework in Frameworks */,
				OBJ_72 /* CryptoSupport.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_87 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_88 /* Hash.framework in Frameworks */,
				OBJ_89 /* CryptoSupport.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_98 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_99 /* CryptoSupport.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		OBJ_13 /* Hash */ = {
			isa = PBXGroup;
			children = (
				OBJ_15 /* Hasher.swift */,
				OBJ_14 /* Exports.swift */,
			);
			name = Hash;
			path = Sources/Hash;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_16 /* Signature */ = {
			isa = PBXGroup;
			children = (
				OBJ_20 /* Signer.swift */,
				OBJ_19 /* HMACKey.swift */,
				OBJ_17 /* AsymmetricKey.swift */,
				OBJ_18 /* Exports.swift */,
			);
			name = Signature;
			path = Sources/Signature;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_21 /* Tests */ = {
			isa = PBXGroup;
			children = (
				55B234A41F79648300CCCEE9 /* LinuxMain.swift */,
				OBJ_22 /* ServerCryptoTests */,
			);
			name = Tests;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_22 /* ServerCryptoTests */ = {
			isa = PBXGroup;
			children = (
				OBJ_23 /* CryptoSupport */,
				OBJ_26 /* Hash */,
				OBJ_29 /* Signature */,
			);
			name = ServerCryptoTests;
			path = Tests/ServerCryptoTests;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_23 /* CryptoSupport */ = {
			isa = PBXGroup;
			children = (
				OBJ_25 /* HexTests.swift */,
				OBJ_24 /* CryptoErrorTests.swift */,
			);
			path = CryptoSupport;
			sourceTree = "<group>";
		};
		OBJ_26 /* Hash */ = {
			isa = PBXGroup;
			children = (
				OBJ_28 /* HashTests.swift */,
				OBJ_27 /* HashTestData.swift */,
			);
			path = Hash;
			sourceTree = "<group>";
		};
		OBJ_29 /* Signature */ = {
			isa = PBXGroup;
			children = (
				OBJ_39 /* SignatureTestsCoordinator.swift */,
				OBJ_33 /* HMAC */,
				OBJ_30 /* ECDSA */,
				OBJ_36 /* RSA */,
			);
			path = Signature;
			sourceTree = "<group>";
		};
		OBJ_30 /* ECDSA */ = {
			isa = PBXGroup;
			children = (
				OBJ_32 /* ECDSATests.swift */,
				OBJ_31 /* ECDSASignatures.swift */,
			);
			path = ECDSA;
			sourceTree = "<group>";
		};
		OBJ_33 /* HMAC */ = {
			isa = PBXGroup;
			children = (
				OBJ_35 /* HMACTests.swift */,
				OBJ_34 /* HMACSignatures.swift */,
			);
			path = HMAC;
			sourceTree = "<group>";
		};
		OBJ_36 /* RSA */ = {
			isa = PBXGroup;
			children = (
				OBJ_38 /* RSATests.swift */,
				OBJ_37 /* RSATestVectors.swift */,
			);
			path = RSA;
			sourceTree = "<group>";
		};
		OBJ_41 /* Dependencies */ = {
			isa = PBXGroup;
			children = (
			);
			name = Dependencies;
			sourceTree = "<group>";
		};
		OBJ_42 /* Products */ = {
			isa = PBXGroup;
			children = (
				"ServerCrypto::ServerCryptoTests::Product" /* ServerCryptoTests.xctest */,
				"ServerCrypto::Signature::Product" /* Signature.framework */,
				"ServerCrypto::Hash::Product" /* Hash.framework */,
				"ServerCrypto::CryptoSupport::Product" /* CryptoSupport.framework */,
			);
			name = Products;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
		OBJ_5 /*  */ = {
			isa = PBXGroup;
			children = (
				OBJ_6 /* Package.swift */,
				OBJ_7 /* Sources */,
				OBJ_21 /* Tests */,
				OBJ_40 /* TestFixtures */,
				OBJ_41 /* Dependencies */,
				OBJ_42 /* Products */,
			);
			name = "";
			sourceTree = "<group>";
		};
		OBJ_7 /* Sources */ = {
			isa = PBXGroup;
			children = (
				OBJ_8 /* CryptoSupport */,
				OBJ_13 /* Hash */,
				OBJ_16 /* Signature */,
			);
			name = Sources;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_8 /* CryptoSupport */ = {
			isa = PBXGroup;
			children = (
				OBJ_11 /* Hex.swift */,
				OBJ_9 /* CryptoError.swift */,
				OBJ_10 /* CryptoProvider.swift */,
				OBJ_12 /* RawBytesProviding.swift */,
			);
			name = CryptoSupport;
			path = Sources/CryptoSupport;
			sourceTree = SOURCE_ROOT;
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		"ServerCrypto::CryptoSupport" /* CryptoSupport */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_101 /* Build configuration list for PBXNativeTarget "CryptoSupport" */;
			buildPhases = (
				OBJ_104 /* Sources */,
				OBJ_109 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = CryptoSupport;
			productName = CryptoSupport;
			productReference = "ServerCrypto::CryptoSupport::Product" /* CryptoSupport.framework */;
			productType = "com.apple.product-type.framework";
		};
		"ServerCrypto::Hash" /* Hash */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_92 /* Build configuration list for PBXNativeTarget "Hash" */;
			buildPhases = (
				OBJ_95 /* Sources */,
				OBJ_98 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				OBJ_100 /* PBXTargetDependency */,
			);
			name = Hash;
			productName = Hash;
			productReference = "ServerCrypto::Hash::Product" /* Hash.framework */;
			productType = "com.apple.product-type.framework";
		};
		"ServerCrypto::ServerCryptoTests" /* ServerCryptoTests */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_54 /* Build configuration list for PBXNativeTarget "ServerCryptoTests" */;
			buildPhases = (
				OBJ_57 /* Sources */,
				OBJ_69 /* Frameworks */,
				55B234A21F795FA500CCCEE9 /* Resources */,
			);
			buildRules = (
			);
			dependencies = (
				OBJ_73 /* PBXTargetDependency */,
				OBJ_75 /* PBXTargetDependency */,
				OBJ_77 /* PBXTargetDependency */,
			);
			name = ServerCryptoTests;
			productName = ServerCryptoTests;
			productReference = "ServerCrypto::ServerCryptoTests::Product" /* ServerCryptoTests.xctest */;
			productType = "com.apple.product-type.bundle.unit-test";
		};
		"ServerCrypto::Signature" /* Signature */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_79 /* Build configuration list for PBXNativeTarget "Signature" */;
			buildPhases = (
				OBJ_82 /* Sources */,
				OBJ_87 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				OBJ_90 /* PBXTargetDependency */,
				OBJ_91 /* PBXTargetDependency */,
			);
			name = Signature;
			productName = Signature;
			productReference = "ServerCrypto::Signature::Product" /* Signature.framework */;
			productType = "com.apple.product-type.framework";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		OBJ_1 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastUpgradeCheck = 9999;
			};
			buildConfigurationList = OBJ_2 /* Build configuration list for PBXProject "ServerCrypto" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = English;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
			);
			mainGroup = OBJ_5 /*  */;
			productRefGroup = OBJ_42 /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				"ServerCrypto::CryptoSupport" /* CryptoSupport */,
				"ServerCrypto::Hash" /* Hash */,
				"ServerCrypto::Signature" /* Signature */,
				"ServerCrypto::ServerCryptoTests" /* ServerCryptoTests */,
			);
		};
/* End PBXProject section */

/* Begin PBXResourcesBuildPhase section */
		55B234A21F795FA500CCCEE9 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				55B234A31F795FAD00CCCEE9 /* TestFixtures in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXResourcesBuildPhase section */

/* Begin PBXSourcesBuildPhase section */
		OBJ_104 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_105 /* CryptoError.swift in Sources */,
				OBJ_106 /* CryptoProvider.swift in Sources */,
				OBJ_107 /* Hex.swift in Sources */,
				OBJ_108 /* RawBytesProviding.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_57 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_58 /* CryptoErrorTests.swift in Sources */,
				OBJ_59 /* HexTests.swift in Sources */,
				OBJ_60 /* HashTestData.swift in Sources */,
				OBJ_61 /* HashTests.swift in Sources */,
				OBJ_62 /* ECDSASignatures.swift in Sources */,
				OBJ_63 /* ECDSATests.swift in Sources */,
				OBJ_64 /* HMACSignatures.swift in Sources */,
				OBJ_65 /* HMACTests.swift in Sources */,
				OBJ_66 /* RSATestVectors.swift in Sources */,
				OBJ_67 /* RSATests.swift in Sources */,
				OBJ_68 /* SignatureTestsCoordinator.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_82 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_83 /* AsymmetricKey.swift in Sources */,
				OBJ_84 /* Exports.swift in Sources */,
				OBJ_85 /* HMACKey.swift in Sources */,
				OBJ_86 /* Signer.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_95 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_96 /* Exports.swift in Sources */,
				OBJ_97 /* Hasher.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		OBJ_100 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "ServerCrypto::CryptoSupport" /* CryptoSupport */;
			targetProxy = 55B2349C1F795EDD00CCCEE9 /* PBXContainerItemProxy */;
		};
		OBJ_73 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "ServerCrypto::Signature" /* Signature */;
			targetProxy = 55B2349E1F795EDD00CCCEE9 /* PBXContainerItemProxy */;
		};
		OBJ_75 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "ServerCrypto::Hash" /* Hash */;
			targetProxy = 55B2349F1F795EDD00CCCEE9 /* PBXContainerItemProxy */;
		};
		OBJ_77 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "ServerCrypto::CryptoSupport" /* CryptoSupport */;
			targetProxy = 55B234A01F795EDD00CCCEE9 /* PBXContainerItemProxy */;
		};
		OBJ_90 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "ServerCrypto::Hash" /* Hash */;
			targetProxy = 55B2349B1F795EDD00CCCEE9 /* PBXContainerItemProxy */;
		};
		OBJ_91 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "ServerCrypto::CryptoSupport" /* CryptoSupport */;
			targetProxy = 55B2349D1F795EDD00CCCEE9 /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin XCBuildConfiguration section */
		OBJ_102 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/.build/checkouts/ctls--3121380376349719755",
				);
				INFOPLIST_FILE = ServerCrypto.xcodeproj/CryptoSupport_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = CryptoSupport;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 4.0;
				TARGET_NAME = CryptoSupport;
			};
			name = Debug;
		};
		OBJ_103 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/.build/checkouts/ctls--3121380376349719755",
				);
				INFOPLIST_FILE = ServerCrypto.xcodeproj/CryptoSupport_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = CryptoSupport;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 4.0;
				TARGET_NAME = CryptoSupport;
			};
			name = Release;
		};
		OBJ_3 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_OBJC_ARC = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = dwarf;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				ENABLE_NS_ASSERTIONS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				HEADER_SEARCH_PATHS = /usr/local/opt/openssl/include;
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				ONLY_ACTIVE_ARCH = YES;
				OTHER_LDFLAGS = "-L/usr/local/opt/openssl/lib";
				OTHER_SWIFT_FLAGS = "-DXcode";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				SUPPORTED_PLATFORMS = macosx;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = SWIFT_PACKAGE;
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				USE_HEADERMAP = NO;
			};
			name = Debug;
		};
		OBJ_4 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_OBJC_ARC = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = YES;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				GCC_OPTIMIZATION_LEVEL = s;
				HEADER_SEARCH_PATHS = /usr/local/opt/openssl/include;
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				OTHER_LDFLAGS = "-L/usr/local/opt/openssl/lib";
				OTHER_SWIFT_FLAGS = "-DXcode";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				SUPPORTED_PLATFORMS = macosx;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = SWIFT_PACKAGE;
				SWIFT_OPTIMIZATION_LEVEL = "-Owholemodule";
				USE_HEADERMAP = NO;
			};
			name = Release;
		};
		OBJ_55 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EMBEDDED_CONTENT_CONTAINS_SWIFT = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/.build/checkouts/ctls--3121380376349719755",
				);
				INFOPLIST_FILE = ServerCrypto.xcodeproj/ServerCryptoTests_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "@loader_path/../Frameworks @loader_path/Frameworks";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				SWIFT_VERSION = 4.0;
				TARGET_NAME = ServerCryptoTests;
			};
			name = Debug;
		};
		OBJ_56 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EMBEDDED_CONTENT_CONTAINS_SWIFT = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/.build/checkouts/ctls--3121380376349719755",
				);
				INFOPLIST_FILE = ServerCrypto.xcodeproj/ServerCryptoTests_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "@loader_path/../Frameworks @loader_path/Frameworks";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				SWIFT_VERSION = 4.0;
				TARGET_NAME = ServerCryptoTests;
			};
			name = Release;
		};
		OBJ_80 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/.build/checkouts/ctls--3121380376349719755",
				);
				INFOPLIST_FILE = ServerCrypto.xcodeproj/Signature_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = Signature;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 4.0;
				TARGET_NAME = Signature;
			};
			name = Debug;
		};
		OBJ_81 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/.build/checkouts/ctls--3121380376349719755",
				);
				INFOPLIST_FILE = ServerCrypto.xcodeproj/Signature_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = Signature;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 4.0;
				TARGET_NAME = Signature;
			};
			name = Release;
		};
		OBJ_93 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/.build/checkouts/ctls--3121380376349719755",
				);
				INFOPLIST_FILE = ServerCrypto.xcodeproj/Hash_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = Hash;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 4.0;
				TARGET_NAME = Hash;
			};
			name = Debug;
		};
		OBJ_94 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/.build/checkouts/ctls--3121380376349719755",
				);
				INFOPLIST_FILE = ServerCrypto.xcodeproj/Hash_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = Hash;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 4.0;
				TARGET_NAME = Hash;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		OBJ_101 /* Build configuration list for PBXNativeTarget "CryptoSupport" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_102 /* Debug */,
				OBJ_103 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		OBJ_2 /* Build configuration list for PBXProject "ServerCrypto" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_3 /* Debug */,
				OBJ_4 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		OBJ_54 /* Build configuration list for PBXNativeTarget "ServerCryptoTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_55 /* Debug */,
				OBJ_56 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		OBJ_79 /* Build configuration list for PBXNativeTarget "Signature" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_80 /* Debug */,
				OBJ_81 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		OBJ_92 /* Build configuration list for PBXNativeTarget "Hash" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_93 /* Debug */,
				OBJ_94 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
/* End XCConfigurationList section */
	};
	rootObject = OBJ_1 /* Project object */;
}
